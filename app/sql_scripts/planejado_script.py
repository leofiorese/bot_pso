# rel_script.py

import logging

def script_sql(dateadd_value):
    
    return f"""
SELECT
    p.CODIGO AS CODIGO_PROJETO,
    p.DT_FIM AS DT_FIM_PROJETO,
    p.DT_INICIO AS DT_INICIO_PROJETO,
    p.NOME AS NOME_PROJETO,
    p.VALOR AS VALOR_PROJETO,
    p.ATIVO,
    p.PROJ_ID,
    prent.DT_CALCULO,
    prent.VL_CUS_ORC_HORAS AS VALOR_CUSTO_TOTAL_ORCADO_HORAS,
    prent.VL_CUS_REAL_HORAS AS VALOR_CUSTO_TOTAL_REAL_HORAS,
    prent.VL_CUS_FALT_HORAS AS VALOR_CUSTO_TOTAL_FALTANDO_HORAS,
    prent.VL_CUS_ORC_DESP AS VALOR_CUSTO_TOTAL_ORCADO_DESPESAS,
    prent.VL_CUS_REAL_DESP AS VALOR_CUSTO_TOTAL_REAL_DESPESAS,
    prent.VL_CUS_FALT_DESP AS VALOR_CUSTO_TOTAL_FALTANDO_DESPESAS,
    pa.ATIV_ID,
    pa.NOME AS NOME_ATIVIDADE,
    pa.B_DT_FIM AS B_DT_FIM_ATIVIDADE,
    pa.B_DT_INICIO AS B_DT_INICIO_ATIVIDADE,
    pa.DT_FIM AS DT_FIM_ATIVIDADE,
    pa.DT_INICIO AS DT_INICIO_ATIVIDADE,
    CAST(pa.DURACAO_PREVISTA / 60 AS DECIMAL(10,2)) AS DURACAO_PREVISTA_HORAS,
    CAST(pa.TRABALHO_APONTADO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_TOTAL_APONTADO_ATIVIDADE,
    CAST(pa.TRABALHO_FALTANDO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_TOTAL_FALTANDO_ATIVIDADE,
    CAST(pa.TRABALHO_PREVISTO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_TOTAL_PREVISTO_ATIVIDADE,
    patrib.ATRIB_ID,
    patrib.PROJREC_ID,
    patrib.USU_ID,
    CAST(patrib.TRABALHO_APONTADO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_RECURSO_APONTADO_ATIVIDADE,
    CAST(patrib.TRABALHO_FALTANDO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_RECURSO_FALTANDO_ATIVIDADE,
    CAST(patrib.TRABALHO_PREVISTO / 60.0 AS DECIMAL(10,2)) AS TRABALHO_RECURSO_PREVISTO_ATIVIDADE,
    patrib.PERC_ALOCACAO,
    prec.NOME AS NOME_RECURSO,
    prec.DESCRICAO,
    prec.TAXA_ID_CUS_PREV AS TX_ID_RECURSO
FROM
    PSO_PROJETOS p
JOIN
    PSO_PROJ_RENT prent ON p.PROJ_ID = prent.PROJ_ID
JOIN
    PSO_PROJ_ATIVIDADES pa ON p.PROJ_ID = pa.PROJ_ID
JOIN
    PSO_PROJ_ATRIBUICOES patrib ON pa.ATIV_ID = patrib.ATIV_ID
JOIN
    PSO_PROJ_RECURSOS prec ON patrib.PROJREC_ID = prec.PROJREC_ID
WHERE
    p.INCLUIDO_EM BETWEEN DATEADD(day, {dateadd_value}, GETDATE()) AND GETDATE()
"""

def gerar_script_final(dateadd_string):
    logging.info(f"rel_script.py: Recebido dateadd_string = '{dateadd_string}', gerando a query.")
    script_completo = script_sql(dateadd_string)

    return script_completo